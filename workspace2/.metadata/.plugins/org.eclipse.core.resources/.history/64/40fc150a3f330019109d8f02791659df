package com.decorate;

/**
 * 装饰设计模型
 * 1、抽象组件：需要装饰的抽象对象(接口或抽象父类)
 * 2、具体组件：需要装饰的对象
 * 3、抽象装饰类：包含了对抽象组件的引用以及装饰着共有的方法
 * 4、具体装饰类：被装饰的对象
 * @author Administrator
 *
 */
public class DecorateTest01 {
	public static void main(String[] args) {
		
	}
	interface Drink{
		double cost();//价格
		String info();//说明
	}
	
	
}
